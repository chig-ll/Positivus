@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Space Grotesk";
  src: url("../fonts/SpaceGrotesk-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Space Grotesk";
  src: url("../fonts/SpaceGrotesk-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: hsl(0, 0%, 100%);
  --color-dark: hsl(0, 0%, 0%);
  --color-dark-alt: hsl(233, 10%, 18%);
  --color-light-dark: hsl(234, 17%, 12%);
  --color-light-уellow: hsl(56, 100%, 50%);
  --color-light-gray: hsl(0, 0%, 95%);
  --color-gray-alt: hsl(0, 0%, 54%);
  --border: 1px solid var(--color-light-dark);
  --border-radius-large: 45px;
  --border-radius-small: 7px;
  --border-radius-click: 14px;
  --shadow: 0 5px 0 0 var(--color-light-dark);
  --font-family-base: "Spase Grotesk", sans-serif;
  --container-width: 1240px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --input-height: 59px;
  --button-height: 68px;
  --transition-duration: .2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(14px, 1.25vw, 18px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-dark);
  background-color: var(--color-light);
}

a,
button,
textarea,
input,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 500;
}

h1 {
  font-size: clamp(43px, 4.1666666667vw, 60px);
}

h2 {
  font-size: clamp(36px, 2.7777777778vw, 40px);
}

h3 {
  font-size: clamp(26px, 2.0833333333vw, 30px);
}

h4 {
  font-size: clamp(18px, 1.3888888889vw, 20px);
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-size: clamp(16px, 1.3888888889vw, 20px);
  height: var(--button-height);
  border-radius: var(--border-radius-click);
  border: var(--border);
  padding-inline: 35px;
  background-color: var(--color-light-dark);
  color: var(--color-light);
}
.button-transparent {
  background-color: transparent;
  color: var(--color-dark);
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 40px;
  height: 40px;
  position: relative;
  border-radius: var(--border-radius-small);
}
@media (hover: hover) {
  .burger-button:hover {
    background-color: var(--color-light-уellow);
  }
}
@media (hover: none) {
  .burger-button:active {
    background-color: var(--color-light-уellow);
  }
}
.burger-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  position: absolute;
  width: 50%;
  height: 2px;
  background-color: var(--color-dark);
  border-radius: 5px;
  box-shadow: 0 -8px, 0 8px;
}

.header {
  padding-block: 60px var(--section-padding-y);
}
@media (max-width: 1280px) {
  .header {
    padding-block: 30px 35px;
  }
}
@media (max-width: 767px) {
  .header {
    padding-block: 15px 18px;
  }
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 40px;
}
@media (max-width: 1280px) {
  .header__inner {
    column-gap: 20px;
  }
}
.header__logo {
  display: flex;
  align-items: center;
  width: 100%;
  max-width: clamp(144px, 15.27vw, 220px);
  column-gap: 13px;
}
@media (max-width: 1280px) {
  .header__logo {
    column-gap: 10px;
  }
}
@media (hover: hover) {
  .header__logo:hover svg {
    fill: var(--color-light-уellow);
    transition-duration: var(--transition-duration);
  }
}
@media (hover: none) {
  .header__logo:active svg {
    fill: var(--color-light-уellow);
    transition-duration: var(--transition-duration);
  }
}
.header__menu {
  margin-left: auto;
}
.header__menu-list {
  display: flex;
  align-items: center;
  column-gap: 40px;
}
@media (max-width: 1280px) {
  .header__menu-list {
    column-gap: 20px;
  }
}
.header__menu-link {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 48px;
}
@media (hover: hover) {
  .header__menu-link:hover {
    color: var(--color-gray-alt);
  }
}
@media (hover: none) {
  .header__menu-link:active {
    color: var(--color-gray-alt);
  }
}
@media (hover: hover) {
  .header__menu-link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__menu-link:active::after {
    width: 100%;
  }
}
.header__menu-link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition-duration: inherit;
}
.header__menu-link:hover::after {
  background-color: var(--color-light-уellow);
}
.header__button {
  padding-inline: 20px;
  background-color: transparent;
  color: var(--color-dark);
}
@media (max-width: 1280px) {
  .header__button {
    padding-inline: 15px;
    height: 60px;
  }
}
@media (hover: hover) {
  .header__button:hover {
    background-color: var(--color-light-уellow);
    border-color: var(--color-light-уellow);
    color: var(--color-gray-alt);
    transition-duration: var(--transition-duration);
  }
}
@media (hover: none) {
  .header__button:active {
    background-color: var(--color-light-уellow);
    border-color: var(--color-light-уellow);
    color: var(--color-gray-alt);
    transition-duration: var(--transition-duration);
  }
}

.cross-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 40px;
  height: 40px;
  position: relative;
  border-radius: var(--border-radius-small);
}
@media (hover: hover) {
  .cross-button:hover {
    background-color: var(--color-light-уellow);
  }
}
@media (hover: none) {
  .cross-button:active {
    background-color: var(--color-light-уellow);
  }
}
.cross-button::before, .cross-button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 24%;
  width: 50%;
  height: 2px;
  background-color: var(--color-dark);
  border-radius: 5px;
}
.cross-button::after {
  rotate: 45deg;
}
.cross-button::before {
  rotate: -45deg;
}

.mobile-overlay {
  width: 100%;
  height: 100%;
  margin: 0;
  border: none;
  padding: 14px 20px;
}
.mobile-overlay:modal {
  max-width: 100%;
  max-height: 100%;
  margin-inline: auto;
}
.mobile-overlay__close-button-wrapper {
  display: flex;
  justify-content: end;
}
.mobile-overlay__body {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  flex-direction: column;
}
.mobile-overlay__list {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  min-height: 80vh;
}
.mobile-overlay__list:not(:last-child) {
  row-gap: 20px;
}
.mobile-overlay__link {
  padding: 10px;
}
.mobile-overlay__button {
  font-size: clamp(14px, 1.25vw, 18px);
  padding-inline: 15px;
  height: 40px;
}

/*# sourceMappingURL=styles.css.map */
